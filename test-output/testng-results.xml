<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="3" passed="2" failed="1" skipped="0">
  <reporter-output>
    <line>
      <![CDATA[testValidLogin is FAILED]]>
    </line>
    <line>
      <![CDATA[Actual and Expected versions are same]]>
    </line>
    <line>
      <![CDATA[testProductVerson is PASSED]]>
    </line>
    <line>
      <![CDATA[testInvalidLogin is PASSED]]>
    </line>
  </reporter-output>
  <suite started-at="2022-10-18T19:59:46 IST" name="Suite" finished-at="2022-10-18T20:01:31 IST" duration-ms="105761">
    <groups>
      <group name="smoke">
        <method signature="ValidLogin_Test.testValidLogin()[pri:1, instance:script.ValidLogin_Test@7193666c]" name="testValidLogin" class="script.ValidLogin_Test"/>
        <method signature="VerifyProductVersion_Test.testProductVerson()[pri:3, instance:script.VerifyProductVersion_Test@323b36e0]" name="testProductVerson" class="script.VerifyProductVersion_Test"/>
      </group> <!-- smoke -->
      <group name="login">
        <method signature="InvalidLogin_Test.testInvalidLogin()[pri:2, instance:script.InvalidLogin_Test@44ebcd03]" name="testInvalidLogin" class="script.InvalidLogin_Test"/>
        <method signature="ValidLogin_Test.testValidLogin()[pri:1, instance:script.ValidLogin_Test@7193666c]" name="testValidLogin" class="script.ValidLogin_Test"/>
      </group> <!-- login -->
    </groups>
    <test started-at="2022-10-18T19:59:46 IST" name="Test" finished-at="2022-10-18T20:01:31 IST" duration-ms="105761">
      <class name="script.InvalidLogin_Test">
        <test-method is-config="true" signature="openApp()[pri:0, instance:script.InvalidLogin_Test@44ebcd03]" started-at="2022-10-18T20:00:42 IST" name="openApp" finished-at="2022-10-18T20:00:56 IST" duration-ms="13766" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApp -->
        <test-method signature="testInvalidLogin()[pri:2, instance:script.InvalidLogin_Test@44ebcd03]" started-at="2022-10-18T20:00:56 IST" name="testInvalidLogin" finished-at="2022-10-18T20:01:30 IST" duration-ms="34156" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidLogin -->
        <test-method is-config="true" signature="closeApp(org.testng.ITestResult)[pri:0, instance:script.InvalidLogin_Test@44ebcd03]" started-at="2022-10-18T20:01:30 IST" name="closeApp" finished-at="2022-10-18T20:01:31 IST" duration-ms="1523" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testInvalidLogin status=SUCCESS method=InvalidLogin_Test.testInvalidLogin()[pri:2, instance:script.InvalidLogin_Test@44ebcd03] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[testInvalidLogin is PASSED]]>
            </line>
          </reporter-output>
        </test-method> <!-- closeApp -->
      </class> <!-- script.InvalidLogin_Test -->
      <class name="script.VerifyProductVersion_Test">
        <test-method is-config="true" signature="openApp()[pri:0, instance:script.VerifyProductVersion_Test@323b36e0]" started-at="2022-10-18T20:00:15 IST" name="openApp" finished-at="2022-10-18T20:00:27 IST" duration-ms="12158" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApp -->
        <test-method signature="testProductVerson()[pri:3, instance:script.VerifyProductVersion_Test@323b36e0]" started-at="2022-10-18T20:00:27 IST" name="testProductVerson" finished-at="2022-10-18T20:00:41 IST" duration-ms="13228" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Actual and Expected versions are same]]>
            </line>
          </reporter-output>
        </test-method> <!-- testProductVerson -->
        <test-method is-config="true" signature="closeApp(org.testng.ITestResult)[pri:0, instance:script.VerifyProductVersion_Test@323b36e0]" started-at="2022-10-18T20:00:41 IST" name="closeApp" finished-at="2022-10-18T20:00:42 IST" duration-ms="1463" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testProductVerson status=SUCCESS method=VerifyProductVersion_Test.testProductVerson()[pri:3, instance:script.VerifyProductVersion_Test@323b36e0] output=Actual and Expected versions are same]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[testProductVerson is PASSED]]>
            </line>
          </reporter-output>
        </test-method> <!-- closeApp -->
      </class> <!-- script.VerifyProductVersion_Test -->
      <class name="script.ValidLogin_Test">
        <test-method is-config="true" signature="openApp()[pri:0, instance:script.ValidLogin_Test@7193666c]" started-at="2022-10-18T19:59:46 IST" name="openApp" finished-at="2022-10-18T20:00:03 IST" duration-ms="17310" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApp -->
        <test-method signature="testValidLogin()[pri:1, instance:script.ValidLogin_Test@7193666c]" started-at="2022-10-18T20:00:03 IST" name="testValidLogin" finished-at="2022-10-18T20:00:14 IST" duration-ms="10511" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [actiTIME - Enter Time-Track] but found [actiTIME - Login]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [actiTIME - Enter Time-Track] but found [actiTIME - Login]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at page.EnterPage.verifyHomePageDisplayed(EnterPage.java:49)
at script.ValidLogin_Test.testValidLogin(ValidLogin_Test.java:27)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidLogin -->
        <test-method is-config="true" signature="closeApp(org.testng.ITestResult)[pri:0, instance:script.ValidLogin_Test@7193666c]" started-at="2022-10-18T20:00:14 IST" name="closeApp" finished-at="2022-10-18T20:00:15 IST" duration-ms="1578" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testValidLogin status=FAILURE method=ValidLogin_Test.testValidLogin()[pri:1, instance:script.ValidLogin_Test@7193666c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[testValidLogin is FAILED]]>
            </line>
          </reporter-output>
        </test-method> <!-- closeApp -->
      </class> <!-- script.ValidLogin_Test -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
