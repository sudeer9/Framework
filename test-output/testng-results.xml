<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="1" passed="0" failed="1" skipped="0">
  <reporter-output>
    <line>
      <![CDATA[testProductVerson is FAILED]]>
    </line>
  </reporter-output>
  <suite started-at="2022-05-23T12:32:26Z" name="Default suite" finished-at="2022-05-23T12:33:04Z" duration-ms="37815">
    <groups>
      <group name="smoke">
        <method signature="VerifyProductVersion_Test.testProductVerson()[pri:3, instance:script.VerifyProductVersion_Test@78ffe6dc]" name="testProductVerson" class="script.VerifyProductVersion_Test"/>
      </group> <!-- smoke -->
    </groups>
    <test started-at="2022-05-23T12:32:26Z" name="Default test" finished-at="2022-05-23T12:33:04Z" duration-ms="37815">
      <class name="script.VerifyProductVersion_Test">
        <test-method is-config="true" signature="openApp()[pri:0, instance:script.VerifyProductVersion_Test@78ffe6dc]" started-at="2022-05-23T18:02:26Z" name="openApp" finished-at="2022-05-23T18:02:46Z" duration-ms="19814" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApp -->
        <test-method signature="testProductVerson()[pri:3, instance:script.VerifyProductVersion_Test@78ffe6dc]" started-at="2022-05-23T18:02:46Z" name="testProductVerson" finished-at="2022-05-23T18:03:01Z" duration-ms="15378" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [actiTIME 2020 Online hello] but found [actiTIME 2020 Online]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [actiTIME 2020 Online hello] but found [actiTIME 2020 Online]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at org.testng.Assert.assertEquals(Assert.java:189)
	at org.testng.Assert.assertEquals(Assert.java:199)
	at page.EnterPage.verifyProductVersion(EnterPage.java:42)
	at script.VerifyProductVersion_Test.testProductVerson(VerifyProductVersion_Test.java:33)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testProductVerson -->
        <test-method is-config="true" signature="closeApp(org.testng.ITestResult)[pri:0, instance:script.VerifyProductVersion_Test@78ffe6dc]" started-at="2022-05-23T18:03:01Z" name="closeApp" finished-at="2022-05-23T18:03:04Z" duration-ms="2579" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testProductVerson status=FAILURE method=VerifyProductVersion_Test.testProductVerson()[pri:3, instance:script.VerifyProductVersion_Test@78ffe6dc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[testProductVerson is FAILED]]>
            </line>
          </reporter-output>
        </test-method> <!-- closeApp -->
      </class> <!-- script.VerifyProductVersion_Test -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
