<?xml version="1.0" encoding="UTF-8"?>
<testng-results total="3" passed="2" failed="1" skipped="0">
  <reporter-output>
    <line>
      <![CDATA[testValidLogin is FAILED]]>
    </line>
    <line>
      <![CDATA[Actual and Expected versions are same]]>
    </line>
    <line>
      <![CDATA[testProductVerson is PASSED]]>
    </line>
    <line>
      <![CDATA[testInvalidLogin is PASSED]]>
    </line>
  </reporter-output>
  <suite started-at="2022-03-16T18:03:28Z" name="Suite" finished-at="2022-03-16T18:05:30Z" duration-ms="122388">
    <groups>
      <group name="smoke">
        <method signature="ValidLogin_Test.testValidLogin()[pri:0, instance:script.ValidLogin_Test@236e3f4e]" name="testValidLogin" class="script.ValidLogin_Test"/>
        <method signature="VerifyProductVersion_Test.testProductVerson()[pri:0, instance:script.VerifyProductVersion_Test@1fb700ee]" name="testProductVerson" class="script.VerifyProductVersion_Test"/>
      </group> <!-- smoke -->
      <group name="login">
        <method signature="InvalidLogin_Test.testInvalidLogin()[pri:0, instance:script.InvalidLogin_Test@4f67eb2a]" name="testInvalidLogin" class="script.InvalidLogin_Test"/>
        <method signature="ValidLogin_Test.testValidLogin()[pri:0, instance:script.ValidLogin_Test@236e3f4e]" name="testValidLogin" class="script.ValidLogin_Test"/>
      </group> <!-- login -->
    </groups>
    <test started-at="2022-03-16T18:03:28Z" name="Test" finished-at="2022-03-16T18:05:30Z" duration-ms="122388">
      <class name="script.InvalidLogin_Test">
        <test-method is-config="true" signature="openApp()[pri:0, instance:script.InvalidLogin_Test@4f67eb2a]" started-at="2022-03-16T23:34:51Z" name="openApp" finished-at="2022-03-16T23:35:08Z" duration-ms="17886" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApp -->
        <test-method signature="testInvalidLogin()[pri:0, instance:script.InvalidLogin_Test@4f67eb2a]" started-at="2022-03-16T23:35:08Z" name="testInvalidLogin" finished-at="2022-03-16T23:35:28Z" duration-ms="19990" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidLogin -->
        <test-method is-config="true" signature="closeApp(org.testng.ITestResult)[pri:0, instance:script.InvalidLogin_Test@4f67eb2a]" started-at="2022-03-16T23:35:28Z" name="closeApp" finished-at="2022-03-16T23:35:30Z" duration-ms="1473" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testInvalidLogin status=SUCCESS method=InvalidLogin_Test.testInvalidLogin()[pri:0, instance:script.InvalidLogin_Test@4f67eb2a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[testInvalidLogin is PASSED]]>
            </line>
          </reporter-output>
        </test-method> <!-- closeApp -->
      </class> <!-- script.InvalidLogin_Test -->
      <class name="script.VerifyProductVersion_Test">
        <test-method is-config="true" signature="openApp()[pri:0, instance:script.VerifyProductVersion_Test@1fb700ee]" started-at="2022-03-16T23:34:23Z" name="openApp" finished-at="2022-03-16T23:34:38Z" duration-ms="14688" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApp -->
        <test-method signature="testProductVerson()[pri:0, instance:script.VerifyProductVersion_Test@1fb700ee]" started-at="2022-03-16T23:34:38Z" name="testProductVerson" finished-at="2022-03-16T23:34:49Z" duration-ms="11554" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Actual and Expected versions are same]]>
            </line>
          </reporter-output>
        </test-method> <!-- testProductVerson -->
        <test-method is-config="true" signature="closeApp(org.testng.ITestResult)[pri:0, instance:script.VerifyProductVersion_Test@1fb700ee]" started-at="2022-03-16T23:34:49Z" name="closeApp" finished-at="2022-03-16T23:34:51Z" duration-ms="1465" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testProductVerson status=SUCCESS method=VerifyProductVersion_Test.testProductVerson()[pri:0, instance:script.VerifyProductVersion_Test@1fb700ee] output=Actual and Expected versions are same]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[testProductVerson is PASSED]]>
            </line>
          </reporter-output>
        </test-method> <!-- closeApp -->
      </class> <!-- script.VerifyProductVersion_Test -->
      <class name="script.ValidLogin_Test">
        <test-method is-config="true" signature="openApp()[pri:0, instance:script.ValidLogin_Test@236e3f4e]" started-at="2022-03-16T23:33:28Z" name="openApp" finished-at="2022-03-16T23:34:11Z" duration-ms="43603" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApp -->
        <test-method signature="testValidLogin()[pri:0, instance:script.ValidLogin_Test@236e3f4e]" started-at="2022-03-16T23:34:11Z" name="testValidLogin" finished-at="2022-03-16T23:34:21Z" duration-ms="10213" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [actiTIME - Enter Time-Track] but found [actiTIME - Login]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [actiTIME - Enter Time-Track] but found [actiTIME - Login]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertEquals(Assert.java:123)
	at org.testng.Assert.assertEquals(Assert.java:176)
	at org.testng.Assert.assertEquals(Assert.java:186)
	at page.EnterPage.verifyHomePageDisplayed(EnterPage.java:49)
	at script.ValidLogin_Test.testValidLogin(ValidLogin_Test.java:26)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidLogin -->
        <test-method is-config="true" signature="closeApp(org.testng.ITestResult)[pri:0, instance:script.ValidLogin_Test@236e3f4e]" started-at="2022-03-16T23:34:21Z" name="closeApp" finished-at="2022-03-16T23:34:23Z" duration-ms="1467" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testValidLogin status=FAILURE method=ValidLogin_Test.testValidLogin()[pri:0, instance:script.ValidLogin_Test@236e3f4e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[testValidLogin is FAILED]]>
            </line>
          </reporter-output>
        </test-method> <!-- closeApp -->
      </class> <!-- script.ValidLogin_Test -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
